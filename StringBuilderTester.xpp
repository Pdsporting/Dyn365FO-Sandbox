using System.Text;

// https://usnconeboxax1aos.cloud.onebox.dynamics.com/?cmp=DAT&mi=SysClassRunner&cls=StringBuilderTester

class StringBuilderTester
{
    static void main(Args _args)
    {
        StringBuilderTester::doTest(10, 10);
        StringBuilderTester::doTest(1028, 10);
        StringBuilderTester::doTest(1028 * 20, 10);

        // Test just the StringBuilder to make sure it is recording correctly because it was so much faster
        int ticksElapsed = StringBuilderTester::test_StringBuilder(1028 * 100, 10);
        info(strFmt("%1 concatenations of a %2-character string took %3 ticks using StringBuilder", 1028 * 500, 10, ticksElapsed));
    }

    public static void doTest(int _iterations, int _stringLength)
    {
        int ticksElapsed;

        ticksElapsed = StringBuilderTester::test_StringBuilder(_iterations, _stringLength);
        info(strFmt("%1 concatenations of a %2-character string took %3 ticks using StringBuilder", _iterations, _stringLength, ticksElapsed));

        ticksElapsed = StringBuilderTester::test_Plus(_iterations, _stringLength);
        info(strFmt("%1 concatenations of a %2-character string took %3 ticks using Plus symbol", _iterations, _stringLength, ticksElapsed));
    }

    public static int test_StringBuilder(int _iterations, int _stringLength)
    {
        str             strToAppend = strRep("A", _stringLength);
        int             ticksStart;
        int             ticksEnd;
        StringBuilder   sb = new StringBuilder();

        ticksStart = WinAPIServer::getTickCount();

        for (int i = 1; i < _iterations; i++)
        {
            sb.Append(strToAppend);
        }

        // Need to call ToString() otherwise this might be an unfair comparison
        str s = sb.ToString();
        if (s) // Preventing potential compiler optimization
        {
            s += "1"; // Preventing potential compiler optimization
        }
        Info(s);

        ticksEnd = WinAPIServer::getTickCount();

        return ticksEnd - ticksStart;
    }

    public static int test_Plus(int _iterations, int _stringLength)
    {
        str strToAppend = strRep("A", _stringLength);
        int     ticksStart;
        int     ticksEnd;
        str     longString;

        ticksStart  = WinAPIServer::getTickCount();

        for (int i = 1; i < _iterations; i++)
        {
            longString += strToAppend;
        }

        ticksEnd = WinAPIServer::getTickCount();

        return ticksEnd - ticksStart;
    }

}
